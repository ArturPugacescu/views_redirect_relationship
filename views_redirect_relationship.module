<?php
/**
 * @file
 * Establishes underlying database logic to build relationships 
 * between nodes and redirects.
 */

/**
 * Implements hook_view_api()
 */
function views_redirect_relationship_views_api() {
  return array(
    'api' => 3,
    'path' => drupal_get_path('module', 'views_redirect_relationship') . '/views',
  );
}
/**
 * Implements function hook_form_FORM_ID_alter 
 *
 * Adds a custom submit function to the redirect add/edit form.
 */
function views_redirect_relationship_form_redirect_edit_form_alter(&$form, &$form_state, $form_id) {
  array_unshift($form['#submit'],'views_redirect_relationship_edit_form_submit');
}
/**
 * Custom submit function for the redirect add/edit form that runs before the main one.
 * Determines if the redirect is to a node (node/###), and if so, it extracts the nid and sets
 * it to be saved to the database when the primary submit handler is run.
 */
function views_redirect_relationship_edit_form_submit(&$form, &$form_state) {
    $form_state['values']['nid'] = views_redirect_relationship_generate($form_state['values']['redirect']);
}
/**
 * Implements hook_menu().
 */
function views_redirect_relationship_menu() {
	$items['admin/config/search/redirect/views_redirect_relationship/generate'] = array(
		'title' => 'Re-generate Relationship NIDs (try if relationships are not working)',
		'page callback' => 'views_redirect_relationship_generate_all',
    'page arguments' => array(true),
    'access arguments' => array('administer redirects'),
		'type' => MENU_LOCAL_ACTION,
	);
  return $items;
} 
/**
 * Callback function used to generate field values within `redirects`
 * table for redirects pointing to actual nodes.
 */
function views_redirect_relationship_generate_all($forward_to_admin=false) {
  $result = db_select('redirect','r')
    ->fields('r')
    ->condition('redirect','node/[0-9]+','REGEXP')
    ->execute();

  foreach($result as $record) {
    try {
      db_update('redirect')
        ->fields(array('nid' => views_redirect_relationship_generate($record->redirect)))
        ->condition('rid', $record->{'rid'})
        ->execute();
    } catch(Exception $e) {
      $error = true;
      drupal_set_message($e,'error');
    }
  }
  
  if($forward_to_admin) {
    (isset($error) ? false : drupal_set_message('The relationships have been created successfully.','status'));
    drupal_goto('admin/config/search/redirect');
  }
}
/**
 * Helper function that receives the destination (node/123) and returns the node id (123)
 */
function views_redirect_relationship_generate($destination) {
  if(preg_match('~(?P<nodetext>node/)(?P<nid>\d+)~',$destination,$matches)) {
    return $matches['nid'];
  }
  return 0;
}